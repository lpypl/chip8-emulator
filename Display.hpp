#ifndef _DISPLAY_H
#define _DISPLAY_H

#include <SFML/Graphics.hpp>
#include <SFML/System.hpp>
#include <cstdint>
#include <string>
#include <vector>

const unsigned int channels = 4;

static sf::Uint8 HEXDIGITS[16][5] = {
    {0xF0, 0x90, 0x90, 0x90, 0xF0},
    {0x20, 0x60, 0x20, 0x20, 0x70},
    {0xF0, 0x10, 0xF0, 0x80, 0xF0},
    {0xF0, 0x10, 0xF0, 0x10, 0xF0},
    {0x90, 0x90, 0xF0, 0x10, 0x10},
    {0xF0, 0x80, 0xF0, 0x10, 0xF0},
    {0xF0, 0x80, 0xF0, 0x90, 0xF0},
    {0xF0, 0x10, 0x20, 0x40, 0x40},
    {0xF0, 0x90, 0xF0, 0x90, 0xF0},
    {0xF0, 0x90, 0xF0, 0x10, 0xF0},
    {0xF0, 0x90, 0xF0, 0x90, 0x90},
    {0xE0, 0x90, 0xE0, 0x90, 0xE0},
    {0xF0, 0x80, 0x80, 0x80, 0xF0},
    {0xE0, 0x90, 0x90, 0x90, 0xE0},
    {0xF0, 0x80, 0xF0, 0x80, 0xF0},
    {0xF0, 0x80, 0xF0, 0x80, 0x80},
};

class Display
{
    unsigned int width;
    unsigned int height;

    sf::RenderWindow window;
    sf::Uint8 *pixels;
    sf::Texture texture;
    sf::Sprite sprite;

    sf::Thread *poll_thread;
    sf::Mutex pixels_mutex;

public:
    Display(unsigned int w, unsigned int h, std::string winame = "CHIP-8");
    ~Display();

    void updateBuffer(std::vector<bool> buffer);

    void drawSprite(uint8_t *sprite, uint8_t height, uint8_t x, uint8_t y);

    void poll();

    void startDisplayLoop();

    static void *poll_wrapper(void *object);

    bool isOpen();
};

#endif